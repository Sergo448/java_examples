// # **–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö `double` –≤ Java: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏**

// –í Java `double` ‚Äî —ç—Ç–æ 64-–±–∏—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π, 
// –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥—Ä–æ–±–Ω—ã—Ö —á–∏—Å–µ–ª —Å –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.
// –û–Ω —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –¥–≤—É—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ (–Ω–∞—Ä—è–¥—É —Å `float`) –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è 
// –≤ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏—è—Ö, –Ω–∞—É—á–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–∞—Ö, –≥—Ä–∞—Ñ–∏–∫–µ –∏ –¥—Ä—É–≥–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö, –≥–¥–µ –≤–∞–∂–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å.

// ---

// ## **1. –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ `double`**
// | –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞       | –ó–Ω–∞—á–µ–Ω–∏–µ                          |
// |----------------------|-----------------------------------|
// | –†–∞–∑–º–µ—Ä (–±–∏—Ç—ã)        | 64                                |
// | –î–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π    | ¬±4.9e-324 –¥–æ ¬±1.8e+308            |
// | –¢–æ—á–Ω–æ—Å—Ç—å             | ~15-17 –∑–Ω–∞—á–∞—â–∏—Ö —Ü–∏—Ñ—Ä              |
// | –ö–ª–∞—Å—Å-–æ–±—ë—Ä—Ç–∫–∞        | `java.lang.Double`                |
// | –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é| `0.0d`                            |

// ### **–ü—Ä–∏–º–µ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è `double`:**
// ```java
double price = 19.99;
double temperature = -5.75;
double scientificValue = 6.022e23; // 6.022 √ó 10¬≤¬≥
// ```

// ---

// ## **2. –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `double` –≤–º–µ—Å—Ç–æ `float`?**
// | –ö—Ä–∏—Ç–µ—Ä–∏–π          | `float` (32 –±–∏—Ç–∞)                                | `double` (64 –±–∏—Ç–∞)                       |
// |-------------------|--------------------------------------------------|------------------------------------------|
// | **–¢–æ—á–Ω–æ—Å—Ç—å**      | ~7 –∑–Ω–∞—á–∞—â–∏—Ö —Ü–∏—Ñ—Ä                                 | ~15-17 –∑–Ω–∞—á–∞—â–∏—Ö —Ü–∏—Ñ—Ä                     |
// | **–°–∫–æ—Ä–æ—Å—Ç—å**      | –ë—ã—Å—Ç—Ä–µ–µ –Ω–∞ —Å—Ç–∞—Ä—ã—Ö CPU                            | –ú–µ–¥–ª–µ–Ω–Ω–µ–µ (–Ω–æ —Å–µ–π—á–∞—Å —Ä–∞–∑–Ω–∏—Ü–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞) |
// | **–ü–∞–º—è—Ç—å**        | –≠–∫–æ–Ω–æ–º–∏—Ç –ø–∞–º—è—Ç—å                                  | –¢—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ –ø–∞–º—è—Ç–∏                    |
// | **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ** | –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å—Ç—Ä–æ–≥–æ–π —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏ | –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –¥—Ä–æ–±–Ω—ã—Ö —á–∏—Å–µ–ª      |

// ### **–ü—Ä–∏–º–µ—Ä —Å—Ä–∞–≤–Ω–µ–Ω–∏—è `float` –∏ `double`:**
// ```java
// float f = 1.23456789f;    // –û–∫—Ä—É–≥–ª—è–µ—Ç—Å—è –¥–æ 1.2345679
// double d = 1.23456789;     // –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Ç–æ—á–Ω–æ
// System.out.println(f);     // –í—ã–≤–æ–¥: 1.2345679
// System.out.println(d);     // –í—ã–≤–æ–¥: 1.23456789
// ```

// ---

// ## **3. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å `double`**
// ### **üîπ 1. –û—à–∏–±–∫–∏ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è**
// –ò–∑-–∑–∞ –¥–≤–æ–∏—á–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π –≤–æ–∑–º–æ–∂–Ω—ã –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏:
// ```java
double a = 0.1 + 0.2;
System.out.println(a); // 0.30000000000000004 (–Ω–µ 0.3!)
// ```

// **–†–µ—à–µ–Ω–∏–µ:** –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `BigDecimal` –¥–ª—è —Ç–æ—á–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤:
// ```java
import java.math.BigDecimal;

BigDecimal b1 = new BigDecimal("0.1");
BigDecimal b2 = new BigDecimal("0.2");
System.out.println(b1.add(b2)); // 0.3 (—Ç–æ—á–Ω–æ)
// ```

// ### **üîπ 2. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ `double`**
// –ò–∑-–∑–∞ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–µ–π –ø—Ä—è–º–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ (`==`) –Ω–µ–Ω–∞–¥—ë–∂–Ω–æ:
// ```java
double x = 1.0 / 3.0;
if (x == 0.3333333333333333) { // –ù–µ–Ω–∞–¥—ë–∂–Ω–æ!
    System.out.println("–†–∞–≤–Ω–æ");
} else {
    System.out.println("–ù–µ —Ä–∞–≤–Ω–æ"); // –ú–æ–∂–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ —ç—Ç–æ!
}
// ```

// **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±:** –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥–æ–ø—É—Å—Ç–∏–º–æ–π –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å—é (`epsilon`):
// ```java
double epsilon = 0.000001;
if (Math.abs(x - 0.333333) < epsilon) {
    System.out.println("–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–ª–∏–∑–∫–æ");
}
// ```

// ### **üîπ 3. –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å –∏ `NaN`**
// `double` –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:
// ```java
double inf = Double.POSITIVE_INFINITY; // +‚àû
double negInf = Double.NEGATIVE_INFINITY; // -‚àû
double nan = Double.NaN; // "Not a Number" (—Ä–µ–∑—É–ª—å—Ç–∞—Ç 0/0, ‚àö-1 –∏ —Ç. –¥.)

System.out.println(1.0 / 0.0); // Infinity
System.out.println(Math.sqrt(-1)); // NaN
// ```

// **–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ `NaN`:**
// ```java
if (Double.isNaN(nan)) {
    System.out.println("–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ!");
}
// ```

// ---

// ## **4. –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `double`**
// ### **üìå 1. –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è**
// ```java
double radius = 5.0;
double area = Math.PI * Math.pow(radius, 2);
System.out.println("–ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞: " + area);
// ```

// ### **üìå 2. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∞—Å—á—ë—Ç—ã (—Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é!)**
// ```java
double price = 9.99;
double taxRate = 0.20;
double total = price * (1 + taxRate);
System.out.printf("–ò—Ç–æ–≥: %.2f$", total); // –ò—Ç–æ–≥: 11.99$
// ```

// ### **üìå 3. –ù–∞—É—á–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è**
// ```java
double speedOfLight = 2.998e8; // 2.998 √ó 10‚Å∏ –º/—Å
double planckConstant = 6.626e-34; // 6.626 √ó 10‚Åª¬≥‚Å¥ –î–∂¬∑—Å
System.out.println("–≠–Ω–µ—Ä–≥–∏—è —Ñ–æ—Ç–æ–Ω–∞: " + (planckConstant * speedOfLight));
// ```

// ---

// ## **5. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å `double`**
// ### **üîπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ)**
// ```java
int i = 5;
double d = i; // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ double (5.0)
// ```

// ### **üîπ –Ø–≤–Ω–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ (—Å—É–∂–µ–Ω–∏–µ)**
// ```java
double d = 3.14;
int i = (int) d; // i = 3 (–¥—Ä–æ–±–Ω–∞—è —á–∞—Å—Ç—å –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è)
// ```

// ### **üîπ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫—É –∏ –æ–±—Ä–∞—Ç–Ω–æ**
// ```java
String s = "3.1415";
double d = Double.parseDouble(s); // –ò–∑ —Å—Ç—Ä–æ–∫–∏ –≤ double

double num = 2.718;
String str = Double.toString(num); // –ò–∑ double –≤ —Å—Ç—Ä–æ–∫—É
// ```

// ---

// ## **6. –í—ã–≤–æ–¥—ã**
// - **`double`** ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–ø –¥–ª—è —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π –≤ Java.
// - **–ò–º–µ–µ—Ç –≤—ã—Å–æ–∫—É—é —Ç–æ—á–Ω–æ—Å—Ç—å**, –Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã –æ—à–∏–±–∫–∏ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è.
// - **–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–æ—á–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤** (–ª—É—á—à–µ `BigDecimal`).
// - **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å (`Infinity`) –∏ `NaN`**.
// - **–°—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π –Ω—É–∂–Ω–æ —á–µ—Ä–µ–∑ `epsilon`**.

// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `double` —Ç–∞–º, –≥–¥–µ –≤–∞–∂–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å, –Ω–æ –ø–æ–º–Ω–∏—Ç–µ –æ –µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö! üöÄ